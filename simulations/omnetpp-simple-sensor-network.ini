[General]
network = SimpleSensorNetwork


#simulation control parameters
#sim-time-limit = 604800s # 7 days
sim-time-limit = 48h # 2 days
repeat = 1


# RNG initialization
num-rngs = 8
seed-0-mt = 1000   # left specifically unused
seed-1-mt = 2000   # demiurge
seed-2-mt = 3000   # numen
seed-3-mt = 4000   # applications
seed-4-mt = 5000   # forwarding
seed-5-mt = 6000   # wired
seed-6-mt = 7000   # wireless
seed-7-mt = 8000   # mobility


# RNG use
**.demiurge.rng-0 = 1
**.numen.rng-0 = 2
**.app[*].rng-0 = 3
**.fwd.rng-0 = 4
**.wired[*].rng-0 = 5
**.wireless[*].rng-0 = 6
**.mobility.rng-0 = 7


# results location
result-dir = results/
output-vector-file = "${resultdir}/${inifile}-${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${inifile}-${configname}-${runnumber}.sca"


# statistic collection
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true


# log events
record-eventlog = false
eventlog-file = "${resultdir}/${inifile}-${configname}-${runnumber}.elog"


[Config Simple-Sensor-Net]

# settings: router (AccessRouter)
**.router.accessRouterNumWiredTransports = 2


# settings: frank (WiredNode)
**.frank.numApps = 1
**.frank.app[0].typename = "ThingsApp"
**.frank.app[0].sensorDataRetrievalStartTime = 30s
**.frank.app[0].interDataDownloadInterval = uniform(20s,50s)
**.frank.app[0].requestedSensorNetworkPrefixName = "ccnx://uhb.de/ee/iot/"
**.frank.app[0].interestLifetime = 8s
**.frank.app[0].sensorDataNames = "vwc;salinity;temperature;humidity"
**.frank.app[0].nextIndexOfSensorDataToRetrieve = intuniform(0, 2)
**.frank.app[0].maxSensorDataReadingsToKeep = 100
**.frank.app[0].maxHopsAllowed = 5


# settings: gw (IoTGateway)
**.gw.numApps = 1
**.gw.app[0].typename = "IoTGatewayApp"
**.gw.app[0].hostedPrefixName = "ccnx://uhb.de/ee/iot/"
**.gw.app[0].hostedPrefixNameForSensorNet = "ccnx://uhb.de/ee/gw/"
**.gw.app[0].sensorPrefixName = "ccnx://uhb.de/ee/sensor/"
**.gw.app[0].interestLifetime = 3s
**.gw.app[0].maximumSensorReadingsToKeep = 100


# settings: climateSensor (WirelessSensorNode)
**.climateSensor.numApps = 1
**.climateSensor.app[0].typename = "SensingApp"
**.climateSensor.app[0].sensorPrefixName = "ccnx://uhb.de/ee/sensor/"
**.climateSensor.app[0].gwPrefixName = "ccnx://uhb.de/ee/gw/"
**.climateSensor.app[0].interestLifetime = 3s
**.climateSensor.app[0].segmentSize = 36byte
**.climateSensor.app[0].numSegmentsPerFile = 1
**.climateSensor.app[0].cacheTime = 800s
**.climateSensor.app[0].sensedDataTypes = "temperature;humidity"
**.climateSensor.app[0].temperature = uniform(20.0, 23.0)
**.climateSensor.app[0].humidity = uniform(50.0, 70.0)
**.climateSensor.app[0].wakeupInterval = 15s


# settings: climateSensor (WirelessSensorNode)
**.plantSensor.numApps = 1
**.plantSensor.app[0].typename = "SensingApp"
**.plantSensor.app[0].sensorPrefixName = "ccnx://uhb.de/ee/sensor/"
**.plantSensor.app[0].gwPrefixName = "ccnx://uhb.de/ee/gw/"
**.plantSensor.app[0].interestLifetime = 3s
**.plantSensor.app[0].segmentSize = 36byte
**.plantSensor.app[0].numSegmentsPerFile = 1
**.plantSensor.app[0].cacheTime = 800s
**.plantSensor.app[0].sensedDataTypes = "vwc;salinity"
**.plantSensor.app[0].vwc = uniform(30.0, 40.0)
**.plantSensor.app[0].salinity = intuniform(1500, 2100)
**.plantSensor.app[0].wakeupInterval = 15s


# General Mobility settings
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s
**.initFromDisplayString = true

